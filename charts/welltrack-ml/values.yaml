# Valores por defecto para welltrack-ml.
# Este es un archivo con formato YAML.
# Declara variables que se pasarán a tus plantillas.

replicaCount: 1

image:
  repository: ghcr.io/salieeriw/pti-welltrackml # Especifica el repositorio de imágenes Docker para la aplicación ML
  pullPolicy: Always
  # Sobrescribe la etiqueta de la imagen cuyo valor por defecto es el appVersion del chart.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Especifica si se debe crear una cuenta de servicio
  create: true
  # Anotaciones para añadir a la cuenta de servicio
  annotations: {}
  # El nombre de la cuenta de servicio a utilizar.
  # Si no se establece y create es true, se genera un nombre usando la plantilla fullname
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000 # Puerto expuesto por el servicio y contenedor de la aplicación ML
  # targetPort: http # Si el puerto del contenedor tiene un nombre (p.ej., 'http'), asegúrate de que coincida con el nombre en la especificación containerPort del Deployment.

ingress:
  enabled: true # Establecer en true para exponer la aplicación ML a través de Ingress
  className: "nginx" # Define el controlador de Ingress a utilizar
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer # Anotación para cert-manager
  hosts:
    - host: ml.welltrack.local # Nombre de host para acceder a la aplicación ML
      paths:
        - path: / # Ruta base para la aplicación ML bajo el host
          pathType: Prefix # Tipo de coincidencia de ruta: Prefix, Exact o ImplementationSpecific
  tls:
    - hosts:
        - ml.welltrack.local
      secretName: ml-welltrack-local-tls # Secreto de Kubernetes para almacenar el certificado TLS

resources:
  {} # Solicitudes y límites de recursos para los pods de la aplicación ML
  # Generalmente recomendamos no especificar recursos por defecto y dejar esto como una decisión consciente
  # para el usuario. Esto también aumenta las posibilidades de que los charts se ejecuten en entornos con escasos
  # recursos, como Minikube. Si deseas especificar recursos, descomenta las siguientes
  # líneas, ajústalas según sea necesario y elimina las llaves después de 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {} # Etiquetas de nodo para la asignación de pods

tolerations: [] # Taints de nodo a tolerar

affinity: {} # Reglas de afinidad y anti-afinidad de pods
